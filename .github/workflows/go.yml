# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
          cache: true

      - name: Verify (vet)
        run: go vet ./...

      - name: Build (packages)
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

      - name: Build (release targets)
        run: bash scripts/build.sh

      - name: Extract version
        id: version
        run: |
          ver=$(awk -F '"' '/const Version/ {print $2}' internal/version/version.go)
          echo "AIC_VERSION=$ver" >> "$GITHUB_ENV"

      - name: Package .deb files
        run: |
          chmod +x scripts/package_deb.sh
          VERSION="$AIC_VERSION" bash scripts/package_deb.sh

      - name: Commit .deb packages to repo
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add dist/deb/*.deb || true
          if ! git diff --cached --quiet; then
            git commit -m "chore: add .deb packages for v${AIC_VERSION} [skip ci]"
            git push
          else
            echo "No .deb changes to commit."
          fi
